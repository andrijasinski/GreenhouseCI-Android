apply plugin: 'com.android.application'

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.2'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    androidTestCompile files('libs/espresso-1.1-bundled.jar')
}

// This is unnecessary
// errar!

android {
    // testOptions {
    //     // resultsDir "/tmp/kana"
    //     resultsDir "hurr-durr-test-results-are-here"
    // }
//	somethingRandom "something.random.here.as.well"
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        testInstrumentationRunner "com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner"
        minSdkVersion 8
        targetSdkVersion 23

        println "\nEnvironment variables are:\n"
        System.getenv().sort().each {
            k, v -> println "${k}=\"${v}\""
        }
        println "\n"

        def printFile = System.getenv()['PRINT_FILE']
        println "\n======================================================================"
        if (!printFile) {
            println "Nothing to do here, PRINT_FILE is not set!"
        } else {
            println "Contents of \"${printFile}\":"
            println new File(printFile).text
        }
        println "======================================================================\n"
    }

    sourceSets {
        androidTest.setRoot('src/androidTest')
    }

     buildTypes {
         debug {
             minifyEnabled true
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
         }
     }

    productFlavors {
        flavor1 {
            applicationId "com.example.flavor1"
            versionName "2.2-flavor1"
        }

        flavor2 {
            applicationId "com.example.flavor2"
            versionName "1.3-flavor2"
        }
    }
}

task crashIfRequired << {
    def divideByZero = System.getenv()['DIVIDE_BY_ZERO']
    println "\n==============================="
    println "divideByZero=\"${divideByZero}\""
    if (divideByZero) {
        println "divideByZero is set, will crash"
        println "===============================\n"
        1/0
    } else {
        println "divideByZero not set, will not crash"
        println "===============================\n"
    }
}

gradle.projectsEvaluated {
    assemble.dependsOn(printFileContents)
    assemble.dependsOn(crashIfRequired)
}

task randomTask << {
    println "randomTask"
}

task otherTask << {
    println 'printing from otherTask'
}
otherTask.group = "Other"

task printFileContents << {
    def printFile = System.getenv()['PRINT_FILE']
    println "\n======================================================================"
    if (!printFile) {
        println "Nothing to do here, PRINT_FILE is not set!"
    } else {
        println "Contents of \"${printFile}\":"
        println new File(printFile).text
    }
    println "======================================================================\n"
}
